name: Compare WordPress versions between environments

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"

permissions:
  contents: write

jobs:
  compare-environments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------- STAGING ----------
      - name: Build STAGING reports on remote
        id: staging_build
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_SSH_HOSTNAME }}
          username: ${{ secrets.STAGING_SSH_USERNAME }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.STAGING_SSH_PASSPHRASE }}
          port: ${{ secrets.STAGING_SSH_PORT }}
          timeout: 30s
          command_timeout: 120s
          script: |
            set -euo pipefail
            REMOTE_DIR=~/www/staging.nielslange.de/public_html
            cd "$REMOTE_DIR" || exit 1

            # Generate JSON output directly
            cat << 'EOF'
            {
              "environment": "STAGING",
              "timestamp": "$(date -u '+%Y-%m-%d %H:%M:%S UTC')",
              "wordpress_version": "$(wp core version --allow-root)",
              "active_theme": "$(wp theme list --status=active --field=name --allow-root)",
              "active_theme_version": "$(wp theme list --status=active --field=version --allow-root)",
              "plugins": $(wp plugin list --format=json --fields=name,status,version --allow-root),
              "themes": $(wp theme list --format=json --fields=name,status,version --allow-root)
            }
            EOF

      # ---------- PRODUCTION ----------
      - name: Build PRODUCTION reports on remote
        id: production_build
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_SSH_HOSTNAME }}
          username: ${{ secrets.PRODUCTION_SSH_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PRODUCTION_SSH_PASSPHRASE }}
          port: ${{ secrets.PRODUCTION_SSH_PORT }}
          timeout: 30s
          command_timeout: 120s
          script: |
            set -euo pipefail
            REMOTE_DIR=~/www/production.nielslange.de/public_html
            cd "$REMOTE_DIR" || exit 1

            # Generate JSON output directly
            cat << 'EOF'
            {
              "environment": "PRODUCTION",
              "timestamp": "$(date -u '+%Y-%m-%d %H:%M:%S UTC')",
              "wordpress_version": "$(wp core version --allow-root)",
              "active_theme": "$(wp theme list --status=active --field=name --allow-root)",
              "active_theme_version": "$(wp theme list --status=active --field=version --allow-root)",
              "plugins": $(wp plugin list --format=json --fields=name,status,version --allow-root),
              "themes": $(wp theme list --format=json --fields=name,status,version --allow-root)
            }
            EOF

      # ---------- SAVE OUTPUTS TO FILES ----------
      - name: Save STAGING output
        run: |
          mkdir -p artifacts
          echo '${{ steps.staging_build.outputs.stdout }}' > artifacts/staging.json

      - name: Save PRODUCTION output
        run: |
          echo '${{ steps.production_build.outputs.stdout }}' > artifacts/production.json

      # ---------- GENERATE COMPARISON ----------
      - name: Generate comparison report
        run: |
          echo "=== ENVIRONMENT COMPARISON REPORT ===" > artifacts/comparison.txt
          echo "Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> artifacts/comparison.txt
          echo "" >> artifacts/comparison.txt

          # Parse JSON files and compare
          if [ -f artifacts/staging.json ] && [ -f artifacts/production.json ]; then
            echo "✅ Both environment reports generated successfully" >> artifacts/comparison.txt
            echo "" >> artifacts/comparison.txt

            # Extract WordPress versions
            STAGING_WP=$(jq -r '.wordpress_version' artifacts/staging.json 2>/dev/null || echo "Unknown")
            PROD_WP=$(jq -r '.wordpress_version' artifacts/production.json 2>/dev/null || echo "Unknown")

            echo "WordPress Versions:" >> artifacts/comparison.txt
            echo "  STAGING: $STAGING_WP" >> artifacts/comparison.txt
            echo "  PRODUCTION: $PROD_WP" >> artifacts/comparison.txt
            echo "" >> artifacts/comparison.txt

            # Extract active themes
            STAGING_THEME=$(jq -r '.active_theme' artifacts/staging.json 2>/dev/null || echo "Unknown")
            PROD_THEME=$(jq -r '.active_theme' artifacts/production.json 2>/dev/null || echo "Unknown")

            echo "Active Themes:" >> artifacts/comparison.txt
            echo "  STAGING: $STAGING_THEME" >> artifacts/comparison.txt
            echo "  PRODUCTION: $PROD_THEME" >> artifacts/comparison.txt
            echo "" >> artifacts/comparison.txt

            # Count plugins
            STAGING_PLUGINS=$(jq '.plugins | length' artifacts/staging.json 2>/dev/null || echo "0")
            PROD_PLUGINS=$(jq '.plugins | length' artifacts/production.json 2>/dev/null || echo "0")

            echo "Plugin Counts:" >> artifacts/comparison.txt
            echo "  STAGING: $STAGING_PLUGINS plugins" >> artifacts/comparison.txt
            echo "  PRODUCTION: $PROD_PLUGINS plugins" >> artifacts/comparison.txt
          else
            echo "❌ Failed to generate environment reports" >> artifacts/comparison.txt
            echo "Files found:" >> artifacts/comparison.txt
            ls -la artifacts/ >> artifacts/comparison.txt
          fi

      # ---------- DISPLAY SUMMARY ----------
      - name: Display comparison summary
        run: |
          echo "=== COMPARISON SUMMARY ==="
          cat artifacts/comparison.txt
          echo
          echo "=== FILES IN ARTIFACTS ==="
          ls -la artifacts/
          echo
          echo "=== JSON PREVIEW - STAGING ==="
          if [ -f artifacts/staging.json ]; then
            head -c 300 artifacts/staging.json
          else
            echo "No staging data found"
          fi
          echo
          echo "=== JSON PREVIEW - PRODUCTION ==="
          if [ -f artifacts/production.json ]; then
            head -c 300 artifacts/production.json
          else
            echo "No production data found"
          fi

      # ---------- UPLOAD ARTIFACTS ----------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wordpress-environment-reports
          path: artifacts/
          retention-days: 30
